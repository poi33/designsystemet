.ds-avatar {
  --dsc-avatar-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='none' viewBox='0 0 24 24' focusable='false' role='img'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M8.25 7.5a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0M12 2.25a5.25 5.25 0 1 0 0 10.5 5.25 5.25 0 0 0 0-10.5M8.288 17.288A5.25 5.25 0 0 1 17.25 21a.75.75 0 0 0 1.5 0 6.75 6.75 0 0 0-13.5 0 .75.75 0 0 0 1.5 0 5.25 5.25 0 0 1 1.538-3.712' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
  --dsc-avatar-background: var(--ds-color-base-default);
  --dsc-avatar-color: var(--ds-color-base-contrast-default);
  --dsc-avatar-size: var(--ds-size-12);
  --dsc-avatar-padding: var(--ds-size-2);

  align-items: center;
  background: var(--dsc-avatar-background);
  border-radius: var(--ds-border-radius-full);
  box-sizing: border-box;
  color: var(--dsc-avatar-color);
  flex-shrink: 0;
  font-weight: var(--ds-font-weight-medium);
  height: var(--dsc-avatar-size);
  justify-content: center;
  overflow: hidden;
  text-decoration: none;
  text-transform: uppercase;
  user-select: none;
  width: var(--dsc-avatar-size);
  @composes ds-print-preserve from './base.css';

  &:not([hidden]) {
    display: inline-flex;
  }

  &:not(:has(img)) {
    padding: var(--dsc-avatar-padding);
  }

  & img,
  & svg {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  &[data-initials]:empty::before {
    content: attr(data-initials);
    font-size: round(down, 1.3em, 0.0625rem); /* Default to 130% */
  }

  &:not([data-initials]):empty::before {
    content: '';
    width: 100%;
    height: 100%;
    background: currentcolor;
    mask: var(--dsc-avatar-icon-url) center / contain no-repeat;

    @media (forced-colors: active) {
      background: CanvasText;
    }
  }

  &[data-variant='square'] {
    border-radius: var(--ds-border-radius-sm);
  }

  @media (forced-colors: active) {
    border-width: var(--ds-size-1);
    border-style: solid;
    border-color: CanvasText;
  }
}
