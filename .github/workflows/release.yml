name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/gh-setup
      - name: Store release version for changeset
        id: release_version
        run: echo "VALUE=$(bash ./scripts/print_release_version.sh)" >> $GITHUB_OUTPUT
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        # Forked version of the changesets action that supports aggregated releases
        uses: dotansimha/changesets-action@v1.5.2
        with:
          publish: pnpm publish-packages
          version: pnpm version-packages
          commit: 'chore: new release'
          title: 'chore: new release'
          createGithubReleases: aggregate
          githubReleaseName: v${{ steps.release_version.outputs.value }}
          githubTagName: v${{ steps.release_version.outputs.value }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}



  deploy-www:
    needs: release
    if: ${{ needs.release.outputs.published == 'true' }}
    uses: ./.github/workflows/azure-deploy-www.yml
    with:
      environment: 'production'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  deploy-theme:
    needs: release
    if: ${{ needs.release.outputs.published == 'true' }}
    uses: ./.github/workflows/azure-deploy-themebuilder.yml
    with:
      environment: 'production'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  deploy-storybook:
    needs: release
    if: ${{ needs.release.outputs.published == 'true' }}
    uses: ./.github/workflows/azure-deploy-storybook.yml
    with:
      environment: 'production'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
